---
definitions:
  Figure:
    properties:
      _id:
        type: string
      name:
        type: string
      greekName:
        type: string
      description:
        type: string
      romanName:
        type: string
      category:
        type: string
      immortal:
        type: string
      gender:
        type: string
      events:
        type: array
        items:
          type: string
      books:
        type: array
        items:
          type: string
      relatives:
        properties:
          father:
            type: string
          mother:
            type: string
          children:
            type: array
            items:
              type: string
          lovers:
            type: array
            items:
              type: string
          spouses:
            type: array
            items:
              type: string
          image:
            type: object
            properties:
              thumbnail:
                type: string
              regular:
                type: string
  Book:
    properties:
      _id:
        type: string
      name:
        type: string
      author:
        type: string
      translator:
        type: array
        items:
          type: string
      description:
        type: string
      rating:
        type: number
      link:
        type: string
      fulltext:
        type: string
      images:
        type: object
        properties:
          thumbnail:
            type: string
          regular:
            type: string
  Quote:
    properties:
      _id:
        type: string
      quote:
        type: string
      author:
        type: string
      book:
        type: string
      rating:
        type: number
  User:
    properties:
      _id:
        type: string
      email:
        type: string
      token:
        type: array
        items:
           type: string
  CuratedUser:
    properties:
      curatedUser:
        type: object
        properties:
          _id:
            type: string
          email:
            type: string
      token:
        type: string
  CuratedUserWithQuotes:
    properties:
      curatedUser:
        type: object
        properties:
          _id:
            type: string
          email:
            type: string
          quotes:
            type: array
            items:
              type: string

      token:
        type: string

paths:
  /figures:
    get:
      tags:
        - Greek Mythological Figures
      description: get all mythological figures or pass a name as parameter a filtered list. Right now we are only fetching "major olympian, "titan" and "primordial deity"
      produces:
        - application/json
      parameters:
        - name: search
          in: query
          description: "Optional name to search through list"
          type: string
          required: false
      responses:
        200:
          description: list of all mythological figures or one if id is in route
          schema:
            $ref: '#/definitions/Figure'
  /figures/{id}:
    get:
      tags:
        - Greek Mythological Figures
      description: get one mythological figure. Right now we are only fetching "major olympian, "titan" and "primordial deity""
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Optional id to return one figure
          type: string
      responses:
        200:
          description: one mythological figure
          schema:
            $ref: '#/definitions/Figure'
    patch:
      tags:
        - Greek Mythological Figures
      description: patch one existing figure
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: id of figure
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Figure'
      responses:
        200:
          description: the updated mythological figure
          schema:
            $ref: '#/definitions/Figure'
  /books:
    get:
      tags:
        - Greek Mythological Books
      description: get mythological books
      produces:
        - application/json
      responses:
        200:
          description: list of all mythological books
          schema:
            $ref: '#/definitions/Book'
  /quotes:
    get:
      tags:
        - Greek mythological Quotes
      description: get mythological quotes
      produces:
        - application/json
      parameters:
        - name: random
          in: query
          description: "Optional param to randomize list order"
          type: boolean
      responses:
        200:
          description: list of all mythological quotes
          schema:
            $ref: '#/definitions/Quote'
  /quotes/random:
    get:
      tags:
        - Greek mythological Quotes
      description: Fetch one random mythological quote
      produces:
        - application/json
      responses:
        200:
          description: One random mythological quote
          schema:
            $ref: '#/definitions/Quote'
  /users/me:
    get:
      tags:
        - Users
      description: The current signed in user
      parameters:
        - name: x-auth
          in: header
          required: true
          description: required token to get the user current user
          type: string
      produces:
        - application/json
      responses:
        200:
          description: send back new the user.
          schema:
            $ref: '#/definitions/CuratedUserWithQuotes'
  /users:
    post:
      consumes:
        - application/json
      tags:
        - Users
      description: Sign up a new user
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        200:
          description: send back the new user.
          schema:
            $ref: '#/definitions/CuratedUser'
  /users/signin:
    post:
      tags:
        - Users
      description: Sign in a existing user
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: send back new the user.
          schema:
            $ref: '#/definitions/User'